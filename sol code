// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract EduToken {
    string public name = "EduToken";
    string public symbol = "EDU";
    uint8 public decimals = 0;
    uint256 public totalSupply;

    address public admin;

    mapping(address => uint256) public balanceOf;

    event Rewarded(address indexed student, uint256 amount);
    event Transferred(address indexed from, address indexed to, uint256 amount);
    event Redeemed(address indexed student, uint256 amount);
    event Burned(address indexed student, uint256 amount);
    event Minted(address indexed admin, uint256 amount);
    event AdminChanged(address indexed oldAdmin, address indexed newAdmin);

    constructor() {
        admin = msg.sender;
    }

    modifier onlyAdmin() {
        require(msg.sender == admin, "Only admin can perform this action");
        _;
    }

    /// @notice Reward tokens to a student (only admin)
    function rewardStudent(address student, uint256 amount) external onlyAdmin {
        balanceOf[student] += amount;
        totalSupply += amount;
        emit Rewarded(student, amount);
    }

    /// @notice Transfer tokens between students
    function transfer(address to, uint256 amount) external {
        require(balanceOf[msg.sender] >= amount, "Insufficient balance");
        balanceOf[msg.sender] -= amount;
        balanceOf[to] += amount;
        emit Transferred(msg.sender, to, amount);
    }

    /// @notice Allows students to redeem their tokens
    function redeemTokens(uint256 amount) external {
        require(balanceOf[msg.sender] >= amount, "Not enough tokens to redeem");
        balanceOf[msg.sender] -= amount;
        totalSupply -= amount;
        emit Redeemed(msg.sender, amount);
    }

    /// @notice View any student's balance
    function getStudentBalance(address student) external view returns (uint256) {
        return balanceOf[student];
    }

    /// @notice Burn (destroy) your own tokens
    function burnTokens(uint256 amount) external {
        require(balanceOf[msg.sender] >= amount, "Insufficient tokens to burn");
        balanceOf[msg.sender] -= amount;
        totalSupply -= amount;
        emit Burned(msg.sender, amount);
    }

    /// @notice Admin can mint extra tokens for the system
    function mintTokens(uint256 amount) external onlyAdmin {
        balanceOf[admin] += amount;
        totalSupply += amount;
        emit Minted(admin, amount);
    }

    /// @notice Admin can transfer the admin role to another address
    function changeAdmin(address newAdmin) external onlyAdmin {
        require(newAdmin != address(0), "New admin cannot be zero address");
        address oldAdmin = admin;
        admin = newAdmin;
        emit AdminChanged(oldAdmin, newAdmin);
    }
}
